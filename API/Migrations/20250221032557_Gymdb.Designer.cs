// <auto-generated />
using System;
using DBA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(GymManagementSystemDBContext))]
    [Migration("20250221032557_Gymdb")]
    partial class Gymdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Account", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasColumnType("Varchar(10)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("Char(12)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LivingAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("Char(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SalaryCode")
                        .IsRequired()
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.HasKey("AccountCode");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Models.Branch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("Varchar(6)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUpdate")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuantityOfPTs")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOfStaffs")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOfWorkers")
                        .HasColumnType("int");

                    b.HasKey("BranchCode");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Models.Customer", b =>
                {
                    b.Property<string>("CustomerCode")
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("BannedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("Varchar(6)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.HasKey("CustomerCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Models.CustomersVoucher", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumber"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("Varchar(12)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PackageCode")
                        .IsRequired()
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.HasKey("OrderNumber");

                    b.ToTable("CustomersVouchers");
                });

            modelBuilder.Entity("Models.EmployeeSalary", b =>
                {
                    b.Property<Guid>("EmpSalCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("Month")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceTotals")
                        .HasColumnType("Money");

                    b.Property<int>("WorkDays")
                        .HasColumnType("int");

                    b.HasKey("EmpSalCode");

                    b.ToTable("EmployeeSalaries");
                });

            modelBuilder.Entity("Models.Equipment", b =>
                {
                    b.Property<string>("EquipCode")
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("AdminUpdate")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("Varchar(6)");

                    b.Property<string>("EquipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffUpdate")
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipCode");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Models.Fine", b =>
                {
                    b.Property<Guid>("FineCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("Varchar(12)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompensated")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.HasKey("FineCode");

                    b.ToTable("Fines");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumber"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderNumber");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Models.Salary", b =>
                {
                    b.Property<string>("SalaryCode")
                        .HasColumnType("Varchar(5)");

                    b.Property<decimal>("PricesApply")
                        .HasColumnType("Money");

                    b.Property<string>("SalaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SalaryCode");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Models.ServicePackage", b =>
                {
                    b.Property<string>("PackageCode")
                        .HasColumnType("Varchar(5)");

                    b.Property<string>("AdminUpdate")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MemberQuantity")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.HasKey("PackageCode");

                    b.ToTable("ServicePackages");
                });

            modelBuilder.Entity("Models.WorkingCheck", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumber"));

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckOf")
                        .IsRequired()
                        .HasColumnType("Varchar(10)");

                    b.Property<bool>("IsCheckIn")
                        .HasColumnType("bit");

                    b.HasKey("OrderNumber");

                    b.ToTable("WorkingChecks");
                });
#pragma warning restore 612, 618
        }
    }
}
