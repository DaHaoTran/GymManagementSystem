@page "/equipment"
@using Models
@using Client_FAU.Variables

<PageTitle>Equipment</PageTitle>

@if(Load.IsLoading)
{
    <Loading></Loading>
}

@if (!string.IsNullOrEmpty(Notification.message))
{
    <div class="alert alert-info mt-2 d-flex">
        <div class="w-50">
            @Notification.message
        </div>
        <div class="w-100 d-flex justify-content-end align-items-center">
            <a class="btn btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="() => Notification.message = string.Empty"/>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="editmodal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <EditForm Model="@Model" FormName="Edit Equipment" OnValidSubmit="UpdateEquipmentDataBase">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="BranchName" class="form-label">Branch code</label>
                                <div class="input-group mb-3">
                                    @* <InputSelect class="form-select" id="BranchName" @bind-Value=Model>
                                        <option selected>Choose...</option>
                                        <option value="1">One</option>
                                        <option value="2">Two</option>
                                        <option value="3">Three</option>
                                    </InputSelect> *@
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenDropDown @ref=@radzenDropDown @bind-SearchText=sip FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" AllowFiltering="true" AllowVirtualization="true"
                                                        Data=@_branches TextProperty="@nameof(Equipment.BranchCode)" ValueProperty="@nameof(Equipment.BranchCode)" AllowClear="true" @bind-Value=Model!.BranchCode Style="width: 100%; max-width: 400px;" Name="DropDownFiltering" />
                                    </RadzenStack>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="EquipName" class="form-label">Equip name</label>
                                <InputText class="form-control" id="EquipName" @bind-Value=Model!.EquipName />
                            </div>
                            <div class="mb-3">
                                <label for="Status" class="form-label">Status</label>
                                <InputText class="form-control" id="Status" @bind-Value=Model.Status />
                            </div>
                            <button type="submit" class="btn mt-3 submit-button fs-3">Confirm</button>
                        </div>
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="Note" class="form-label">Note</label>
                                <InputTextArea type="text" class="form-control" id="Note" @bind-Value=Model.Note />
                            </div>
                            <ValidationSummary />
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<!-- start table -->
<RadzenDataGrid class="mt-3" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.CheckBoxList"
                AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                AllowMultiColumnSorting="true" ShowMultiColumnSortingIndex="true"
                Data="@data" TItem="Equipment" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true"
                IsLoading=@isLoading Sort="@ShowLoading" Page="@ShowLoading" Group="@ShowLoading" Filter="@ShowLoading">
    <HeaderTemplate>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
            <RadzenText TextStyle="TextStyle.H3">Equipment</RadzenText>
            <!-- create new button -->
            <RadzenButton data-bs-toggle="modal" data-bs-target="#editmodal" @onclick=SetAddState
                          Icon="add_circle" Size="ButtonSize.Medium" class="float-left rz-float-left rz-mt-2 rz-ml-2" />
            <!-- form field -->
            <RadzenFormField AllowFloatingLabel="true" Text="Search" Variant="Variant.Text" class="float-end rz-float-right">
                <ChildContent>
                    <RadzenTextBox />
                </ChildContent>
                <End>
                    <RadzenButton Icon="search" Variant="Variant.Text" Size="ButtonSize.Small" class="mr-2" />
                    <RadzenButton Icon="filter_alt_off" Variant="Variant.Text" Size="ButtonSize.Small" />
                </End>
            </RadzenFormField>
        </RadzenStack>
    </HeaderTemplate>
    <Columns>
        <!-- delete switch -->
        <RadzenDataGridColumn Frozen="true" Filterable="false" Width="80px" Title="Is Deleted">
            <Template Context="item">
                <RadzenSwitch @bind-Value=@item.IsDeleted Change="@(arg => EditEquipmentDeletedStateDatabase(item))"/>
            </Template>
        </RadzenDataGridColumn>
        <!-- recive switch -->
        <RadzenDataGridColumn Frozen="true" Filterable="false" Width="80px" Title="Is Receive">
            <Template Context="item">
                <RadzenSwitch @bind-Value=@item.IsReceived Change="@(arg => EditEquipmentRecievedStateDatabase(item))" />
            </Template>
        </RadzenDataGridColumn>
        <!-- edit button -->
        <RadzenDataGridColumn Frozen="true" Filterable="false" Width="80px" Title="Edit">
            <Template Context="item">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small" class="mb-1 mt-1" data-bs-toggle="modal" data-bs-target="#editmodal" @onclick:stopPropagation=true Click="@(arg => SetEditState(item))" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(Equipment.EquipCode)" Filterable="false" Title="EquipCode" Frozen="true" Width="160px" TextAlign="TextAlign.Left" />
        <RadzenDataGridColumn Property="@nameof(Equipment.BranchCode)" Filterable="false" Title="BranchCode" Frozen="true" Width="160px" TextAlign="TextAlign.Left" />
        <RadzenDataGridColumn Property="@nameof(Equipment.EquipName)" Title="EquipName" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Equipment.Status)" Title="Status" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Equipment.Note)" Title="Status" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Equipment.StaffUpdate)" Title="StaffUpdate" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(Equipment.AdminUpdate)" Title="AdminUpdate" Width="160px" />
    </Columns>
</RadzenDataGrid>
<!-- end table -->
