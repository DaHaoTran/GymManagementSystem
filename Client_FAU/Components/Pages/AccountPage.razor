@page "/account"
@using Client_FAU.Components.Ingredients;
@using Client_FAU.Variables

<PageTitle>Account</PageTitle>

<div class="row mt-3">
    <div class="col-6">
        <button class="btn w-25" data-bs-toggle="modal" data-bs-target="#editmodal" @onclick=SetAddState>+</button>
    </div>
    <div class="d-flex justify-content-end col-6">
        <input type="text" class="form-control me-3" />
        <button class="btn">Search</button>
    </div>
</div>

@if(Load.IsLoading)
{
    <Loading></Loading>
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-2 d-flex">
        <div class="w-50">
            @message
        </div>
        <div class="w-100 d-flex justify-content-end align-items-center">
            <a class="btn btn-close" data-bs-dismiss="alert" aria-label="Close" />
        </div>
    </div>
}

<!-- detail -->
<div class="row mt-5">
    @if (Lists.accounts == null)
    {
        <h5>There are a problem !</h5>
    } else if(Lists.accounts.Count() <= 0)
    {
        <h5>There are no record to display</h5>
    }
    else
    {
        foreach(var account in Lists.accounts)
        {
            <div class="nav-link link-dark col-3 mb-5 account">
                <div class="head-container d-grid">
                    <div class="role">
                        @{
                            account.GetRoleName = Lists.roles!.Where(x => x.OrderNumber == account.RoleId).FirstOrDefault()!.RoleName;
                        }
                        <h4 class="fw-bolder">@account.GetRoleName.Substring(0, 2)</h4>
                    </div>
                    <div class="code">
                        <h4 class="fw-bolder">@account.AccountCode.Substring(0, 2)..</h4>
                    </div>
                </div>
                <div class="w-100" data-bs-toggle="modal" data-bs-target="#@account.AccountCode">
                    @if (account.IsDeleted)
                    {
                        <img class="w-100" src="./images/user_unactive.png" alt="A User" />
                    }else
                    {
                        <img class="w-100" src="./images/user.png" alt="A User" />
                    }
                </div>
                <div class="user-name text-center mt-3">
                    <h4 class="fw-bolder">@account.FullName</h4>
                </div>
                <div class="input-check form-switch d-flex justify-content-center">
                    @if (account.IsDeleted)
                    {
                        <input class="form-check-input w-50" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked @onchange="() => EditAccountStateDataBase(account)">
                    }
                    else
                    {
                        <input class="form-check-input w-50" type="checkbox" role="switch" id="flexSwitchCheckChecked" @onchange="() => EditAccountStateDataBase(account)">
                    }
                </div>
            </div>
            <!-- detail modal -->
            <div class="modal fade" id="@account.AccountCode" tabindex="-1" aria-labelledby="DetailModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content bg-transparent">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5 text-white" id="exampleModalLabel">Account Detail</h1>
                        </div>
                        <div class="modal-body d-flex justify-content-center align-items-center">
                            <div class="card card-body user-detail">
                                <div class="row">
                                    <div class="col-11">
                                        <div class="address w-50">
                                            <h5 class="fw-bold">Address: <span class="sub-detail">@account.LivingAt</span></h5>
                                        </div>
                                        <div class="quantities row w-100">
                                            <div class="text-start col-12">Age: <span class="sub-detail">@account.Age</span></div>
                                            <div class="text-start col-12">Phone number: <span class="sub-detail">@account.PhoneNumber</span></div>
                                            <div class="text-start col-12">Id: <span class="sub-detail">@account.IdNumber</span></div>
                                            @{
                                                account.GetSalaryType = Lists.salaries!.Where(x => x.SalaryCode == account.SalaryCode).FirstOrDefault()!.SalaryType;
                                            }
                                            <div class="text-start col-12">Salary type: <span class="sub-detail">@account.GetSalaryType</span></div>

                                            <div class="col-12 text-center fs-6 mt-2">Update by @account.UpdateBy</div>
                                        </div>
                                    </div>

                                    @if (account.IsDeleted == false)
                                    {
                                        <div class="col-1 a-container edit d-flex justify-content-center align-items-center">
                                            <div class="image w-100" data-bs-toggle="modal" data-bs-target="#editmodal" @onclick="() => SetModelEdit(account)">
                                                <img class="w-100" src="images/edit.png" alt="Edit" />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end detail modal -->
        }
    }
</div>

<!-- Modal -->
<div class="modal fade" id="editmodal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <EditForm Model=Model FormName="Edit Account" OnValidSubmit="UpdateAccountDataBase">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="FullName" class="form-label">Full name</label>
                                <InputText type="text" class="form-control" id="FullName" @bind-Value=Model!.FullName/>
                            </div>
                            <div class="mb-3">
                                <label for="PhoneNumber" class="form-label">Phone Number</label>
                                <InputText type="text" class="form-control" id="PhoneNumber" @bind-Value=Model.PhoneNumber />
                            </div>
                            <div class="mb-3">
                                <div class="row">
                                    <div class="col-4 d-flex align-items-center">
                                        <label for="Age" class="form-label mx-1">Age</label>
                                        <InputNumber type="number" class="form-control mb-3" id="Age" @bind-Value=Model.Age />
                                    </div>
                                    <div class="col-8 d-flex align-items-center">
                                        <label for="Role" class="form-label mx-1">Role</label>
                                        <div class="input-group mb-3">
                                            <InputSelect class="form-select" id="Role" @bind-Value=Model.GetRoleName>
                                                <option value="" selected>-- Choose --</option>
                                                @foreach (var role in Lists.roles!)
                                                {
                                                    <option value="@role.RoleName">@role.RoleName</option>
                                                }
                                            </InputSelect>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 d-flex justify-content-start">
                                <label for="Salary" class="form-label mx-1">Salary</label>
                                <InputSelect class="form-select" id="Salary" @bind-Value=Model.GetSalaryType>
                                    <option value="" selected>-- Choose --</option>
                                    @foreach (var salary in Lists.salaries!)
                                    {
                                        <option value="@salary.SalaryType">@salary.SalaryType</option>
                                    }
                                </InputSelect>
                            </div>
                            <ValidationSummary />

                            <button type="submit" class="btn submit-button fs-3 mt-3">Confirm</button>
                        </div>
                        <div class="col-6">
                            <div class="mb-3">
                                <label for="Address" class="form-label mx-1">Living at</label>
                                <InputTextArea class="form-control" @bind-Value=Model.LivingAt />
                            </div>
                            <div class="mb-3">
                                <label for="Password" class="form-label mx-1">Password</label>
                                <InputText type="text" class="form-control mb-3" id="Password" @bind-Value=Model.Password />
                            </div>
                            <div class="mb-3">
                                <label for="Id" class="form-label mx-1">Id</label>
                                <InputText type="text" class="form-control mb-3" id="Id" @bind-Value=Model.IdNumber />
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function CloseEditModal() {
        var modal = document.getElementById('editmodal');
        var bsModal = bootstrap.Modal.getInstance(modal);
        bsModal.hide();
    }
</script>

